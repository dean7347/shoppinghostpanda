spring.profiles.active=local
#server.servlet.session.timeout=30m
#개발시에만 create-drop 또는 update를 사용하고 운영 환경에서는 validate를 사용.
#update는 없는 스키마를 drop하지 않는데 실행할때 엔티티 매핑 정보를 보고 없는 컬럼만 추가해준다
#컬럼명이 바뀌면 컬럼이 추가되고 기존것도 유지되는.. 우리가 생각하는 업데이트와는 차이가 좀 있다
#validate로는 검증만 하는것이다 엔티티 정보와 db스키마가 매핑이가능한가 되어있는가
spring.jpa.hibernate.ddl-auto=create
#  create-drop
#개발시 sql로깅을 하여 어떤 값으로 어떤 sql이 실행되는지 확인
spring.jpa.properties.hibernate.formay_sql=true;
logging.level.org.hibernate.sql=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
server.tomcat.max-http-form-post-size=5MB
#도메인이름
#app.host는 appproperties에서 사용가능
app.host=http://localhost:8080
#HTML FORM에서 th:method에서 PUT 또는 DELETE를 사용해서 보내는 Method를 사용해서 @PutMapping과 @DeleteMapping으로 요청을 매핑
spring.mvc.hiddenmethod.filter.enabled=true
spring.jwt.secret=jwtsecretkey